<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd">



    <!--Spark配置-->
    <!--<bean id="sparkDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="org.apache.hive.jdbc.HiveDriver"/>
        <property name="url" value="${spark_url}"/>
        <property name="username" value="${spark_username}"/>
        <property name="password" value="${spark_password}"/>
        <property name="initialSize" value="2"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="10"/>
        &lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;
        <property name="maxWait" value="60000"/>

        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        &lt;!&ndash;testOnBorrow自动重连&ndash;&gt;
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

    </bean>-->

    <!-- 阅卷3.0-基础库 -->
    <!--<bean id="mysqlBaseDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        &lt;!&ndash; 基本属性 url、user、password &ndash;&gt;
        <property name="url" value="${mysql_base_url}"/>
        <property name="username" value="${mysql_base_username}"/>
        <property name="password" value="${mysql_base_password}"/>
        &lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>

        &lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;
        <property name="maxWait" value="60000"/>

        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        &lt;!&ndash;testOnBorrow自动重连&ndash;&gt;
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        &lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="82"/>
    </bean>-->

    <!-- Oracle数据源配置 报表库-->
  <!--  <bean id="oracleDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        &lt;!&ndash; 基本属性 url、user、password &ndash;&gt;
        <property name="driverClassName" value="${oracle_driverClassName}"/>
        <property name="url" value="${oracle_url}"/>
        <property name="username" value="${oracle_username}"/>
        <property name="password" value="${oracle_password}"/>
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>

        &lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;
        <property name="maxWait" value="60000"/>

        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x' FROM DUAL"/>
        <property name="testWhileIdle" value="true"/>
        &lt;!&ndash;testOnBorrow自动重连&ndash;&gt;
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        &lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="82"/>
    </bean>-->


    <!--图形报告-->
    <!--<bean id="graphDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        &lt;!&ndash; 基本属性 url、user、password &ndash;&gt;
        <property name="url" value="${graph_url}"/>
        <property name="username" value="${graph_username}"/>
        <property name="password" value="${graph_password}"/>
        &lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="25"/>

        &lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;
        <property name="maxWait" value="60000"/>

        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        &lt;!&ndash;testOnBorrow自动重连&ndash;&gt;
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        &lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="82"/>
    </bean>-->

<!--    <bean id="shardingDataSource" class="com.dangdang.ddframe.rdb.sharding.api.ShardingDataSource">
        <constructor-arg name="shardingRule" ref="shardingRule"/>
    </bean>-->
    <bean id="shardingRouter" class="com.qtone.common.sharding.SharingRouter">
        <constructor-arg name="shardingRule" ref="shardingRule"/>
        <constructor-arg name="dataSourceRule" ref="dataSourceRule"/>
    </bean>


    <!--HiveServer2配置-->
    <!--<bean id="hiveDataSource" class="com.qtone.common.connection.HiveDataSource" init-method="init"
          destroy-method="close">
        &lt;!&ndash; 基本属性 url、user、password &ndash;&gt;
        <property name="driverClassName" value="${hive_driverClassName}"/>
        <property name="url" value="${hive_url}"/>
        <property name="username" value="${hive_username}"/>
        <property name="password" value="${hive_password}"/>
        <property name="maxActive" value="50"/>
        <property name="initialSize" value="10"/>
        &lt;!&ndash;testOnBorrow自动重连&ndash;&gt;
        <property name="testOnBorrow" value="true"/>
        <property name="hiveSessionSettings">
            <list>
                <value>set hive.fetch.task.conversion=more</value>
                &lt;!&ndash;<value>set hive.execution.engine=spark</value>&ndash;&gt;
            </list>
        </property>
    </bean>-->

</beans>